---
- name: Deploy meteor app
  hosts: all
  sudo: yes
  vars_prompt:
    - name: "site_name"
      prompt: "Sitename for Meteor App"
    - name: "port"
      prompt: "Local port for meteor app"
      default: "3010"
  vars:
    app_name: "meteorApp"
    deploy_dir: "/var/{{ app_name }}"
    deploy_app_dir: "/var/{{ app_name }}/{{ site_name }}"
    db_name: "{{ site_name | replace('.','') }}"
    mongo_url: "mongodb://localhost:27017/{{ db_name}}"

    nginx_upstream_name: "{{ site_name }}"
    nginx_upstream_server: "127.0.0.1:{{ port }}"
    nginx_server_proxy_pass: "http://127.0.0.1:{{ port }}"
    nginx_server_log_dir: "{{ deploy_app_dir }}"
    nginx_ssl_key: "/etc/ssl/certs/nginx.key.pem"
    nginx_ssl_cert: "/etc/ssl/certs/nginx.pem"
  
  tasks:
    - name: ensure user {{ app_name }} exists
      sudo: yes
      user: name="{{ app_name }}" state=present createhome=no system=yes

    - name: ensure directories exists
      sudo: yes
      file: name="{{ item }}" state=directory owner="{{ app_name }}" group="www-data"
      with_items: 
      - "{{ deploy_dir }}"
      - "{{ deploy_app_dir }}"

    - name: remove current running app
      sudo: yes
      file: name="{{ deploy_app_dir }}/bundle" state=absent

    - name: copy new bundle
      sudo: yes
      copy: src="{{ app_name }}.tar.gz" dest="{{ deploy_app_dir }}/{{ app_name }}.tar.gz" owner={{ app_name }} group={{ app_name }}

    - name: unarchive new bundle
      sudo: yes
      unarchive: src="{{ deploy_app_dir }}/{{ app_name }}.tar.gz" dest="{{ deploy_app_dir }}" remote_src=yes copy=no owner={{ app_name }} group={{ app_name }}

    - name: install npm dependencies
      sudo: yes
      npm: path="{{ deploy_app_dir }}/bundle/programs/server"

    - name: copy nginx virtual host file
      sudo: yes
      template: src="templates/nginx.j2" dest="/etc/nginx/sites-available/{{ site_name }}" owner=root group=root

    - name: copy systemd conf file
      sudo: yes
      template: src="templates/systemd.j2" dest="/etc/systemd/system/{{ site_name }}.service" owner=root group=root

    - name: reload systemd
      sudo: yes
      command: systemctl daemon-reload

    - name: start systemd service
      sudo: yes
      service: name="{{ site_name }}" state=started enabled=yes
    
    - name: link nginx virtual host file
      sudo: yes
      file: src="/etc/nginx/sites-available/{{ site_name }}" dest="/etc/nginx/sites-enabled/{{ site_name }}" state=link

    - name: restart nginx
      sudo: yes
      service: name=nginx state=reloaded